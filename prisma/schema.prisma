generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model tbl_ator {
  id                     Int                      @id @unique(map: "id") @default(autoincrement())
  nome                   String                   @db.VarChar(100)
  foto                   String                   @db.Text
  biografia              String                   @db.Text
  data_nascimento        DateTime                 @db.Date
  tbl_filme_ator         tbl_filme_ator[]
  tbl_nacionalidade_ator tbl_nacionalidade_ator[]
}

model tbl_categoria_foto_perfil {
  id              Int               @id @default(autoincrement())
  nome            String?           @db.VarChar(100)
  tbl_foto_perfil tbl_foto_perfil[]
}

model tbl_classificacao {
  id                       Int         @id @default(autoincrement())
  sigla                    String      @db.VarChar(5)
  descricao                String      @db.VarChar(150)
  classificacao_indicativa String      @db.VarChar(150)
  icone                    String      @db.VarChar(200)
  tbl_filme                tbl_filme[]
}

model tbl_diretor {
  id                Int                 @id @unique(map: "id") @default(autoincrement())
  nome              String              @db.VarChar(100)
  tbl_filme_diretor tbl_filme_diretor[]
}

model tbl_filme {
  id                 Int                  @id @unique(map: "id") @default(autoincrement())
  nome               String               @db.VarChar(80)
  sinopse            String               @db.Text
  duracao            DateTime             @db.Time(0)
  data_lancamento    DateTime             @db.Date
  foto_capa          String               @db.Text
  foto_banner        String               @db.Text
  destaque           Boolean
  link_trailer       String               @db.VarChar(200)
  id_classificacao   Int
  tbl_classificacao  tbl_classificacao    @relation(fields: [id_classificacao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_ibfk_1")
  tbl_filme_ator     tbl_filme_ator[]
  tbl_filme_diretor  tbl_filme_diretor[]
  tbl_filme_favorito tbl_filme_favorito[]
  tbl_filme_genero   tbl_filme_genero[]

  @@index([id_classificacao], map: "id_classificacao")
}

model tbl_filme_ator {
  id        Int       @id @unique(map: "id") @default(autoincrement())
  id_filme  Int
  id_ator   Int
  tbl_filme tbl_filme @relation(fields: [id_filme], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_ator_ibfk_1")
  tbl_ator  tbl_ator  @relation(fields: [id_ator], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_ator_ibfk_2")

  @@index([id_ator], map: "id_ator")
  @@index([id_filme], map: "id_filme")
}

model tbl_filme_diretor {
  id          Int         @id @unique(map: "id") @default(autoincrement())
  id_filme    Int
  id_diretor  Int
  tbl_filme   tbl_filme   @relation(fields: [id_filme], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_diretor_ibfk_1")
  tbl_diretor tbl_diretor @relation(fields: [id_diretor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_diretor_ibfk_2")

  @@index([id_diretor], map: "id_diretor")
  @@index([id_filme], map: "id_filme")
}

model tbl_filme_favorito {
  id         Int        @id @unique(map: "id") @default(autoincrement())
  id_filme   Int
  id_perfil  Int
  tbl_filme  tbl_filme  @relation(fields: [id_filme], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_favorito_ibfk_1")
  tbl_perfil tbl_perfil @relation(fields: [id_perfil], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_favorito_ibfk_2")

  @@index([id_filme], map: "id_filme")
  @@index([id_perfil], map: "id_perfil")
}

model tbl_filme_genero {
  id         Int        @id @unique(map: "id") @default(autoincrement())
  id_filme   Int
  id_genero  Int
  tbl_filme  tbl_filme  @relation(fields: [id_filme], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_genero_ibfk_1")
  tbl_genero tbl_genero @relation(fields: [id_genero], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_filme_genero_ibfk_2")

  @@index([id_filme], map: "id_filme")
  @@index([id_genero], map: "id_genero")
}

model tbl_foto_perfil {
  id                        Int                       @id @unique(map: "id") @default(autoincrement())
  foto                      String?                   @db.Text
  id_categoria_foto_perfil  Int
  tbl_categoria_foto_perfil tbl_categoria_foto_perfil @relation(fields: [id_categoria_foto_perfil], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_foto_perfil_ibfk_1")
  tbl_perfil                tbl_perfil[]

  @@index([id_categoria_foto_perfil], map: "id_categoria_foto_perfil")
}

model tbl_funcionario {
  id    Int    @id @unique(map: "id") @default(autoincrement())
  nome  String @db.VarChar(100)
  email String @db.VarChar(100)
  senha String @db.VarChar(50)
}

model tbl_genero {
  id               Int                @id @default(autoincrement())
  nome             String             @db.VarChar(100)
  tbl_filme_genero tbl_filme_genero[]
}

model tbl_nacionalidade {
  id                     Int                      @id @unique(map: "id") @default(autoincrement())
  pais                   String                   @db.VarChar(150)
  nome                   String                   @db.VarChar(150)
  bandeira               String                   @db.Text
  tbl_nacionalidade_ator tbl_nacionalidade_ator[]
}

model tbl_nacionalidade_ator {
  id                Int               @id @unique(map: "id") @default(autoincrement())
  id_nacionalidade  Int
  id_ator           Int
  tbl_nacionalidade tbl_nacionalidade @relation(fields: [id_nacionalidade], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_nacionalidade_ator_ibfk_1")
  tbl_ator          tbl_ator          @relation(fields: [id_ator], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_nacionalidade_ator_ibfk_2")

  @@index([id_ator], map: "id_ator")
  @@index([id_nacionalidade], map: "id_nacionalidade")
}

model tbl_perfil {
  id                 Int                  @id @unique(map: "id") @default(autoincrement())
  apelido            String               @db.VarChar(80)
  id_usuario         Int
  id_foto_perfil     Int
  tbl_filme_favorito tbl_filme_favorito[]
  tbl_usuario        tbl_usuario          @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_perfil_ibfk_1")
  tbl_foto_perfil    tbl_foto_perfil      @relation(fields: [id_foto_perfil], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tbl_perfil_ibfk_2")

  @@index([id_foto_perfil], map: "id_foto_perfil")
  @@index([id_usuario], map: "id_usuario")
}

model tbl_usuario {
  id         Int          @id @unique(map: "id") @default(autoincrement())
  nome       String       @db.VarChar(100)
  email      String       @db.VarChar(100)
  senha      String       @db.VarChar(50)
  tbl_perfil tbl_perfil[]
}
